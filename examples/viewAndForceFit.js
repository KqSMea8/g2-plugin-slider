webpackJsonp([1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var $ = __webpack_require__(3);
	var G2 = __webpack_require__(1);
	__webpack_require__(2);
	$.getJSON('./candleSticks.json', function (data) {
	  var Stat = G2.Stat;
	  var chart = new G2.Chart({
	    id: 'c1',
	    forceFit: true,
	    height: 250
	  });
	  // 创建数据源
	  var Frame = G2.Frame;
	  var frame = new Frame(data);
	  frame.addCol('trend', function (obj) {
	    return obj.start <= obj.end ? 0 : 1;
	  });
	  var view1 = chart.createView({
	    start: {
	      x: 0,
	      y: 0
	    },
	    end: {
	      x: 1,
	      y: 0.7
	    }
	  });
	  view1.source(frame, {
	    'trend': {
	      type: 'cat',
	      alias: '趋势',
	      values: ['上涨', '下跌']
	    },
	    'time': {
	      type: 'time',
	      nice: false,
	      mask: 'mm-dd',
	      alias: '时间',
	      tickCount: 10
	    },
	    'volumn': {
	      alias: '成交量'
	    },
	    'start': {
	      alias: '开盘价'
	    },
	    'end': {
	      alias: '收盘价'
	    },
	    'max': {
	      alias: '最高价'
	    },
	    'min': {
	      alias: '最低价'
	    },
	    'start+end+max+min': {
	      alias: '股票价格'
	    }
	  });
	  view1.axis('time', {
	    title: null
	  });
	  view1.schema().position('time*(start+end+max+min)').color('trend', ['#2AF483', '#F80041']).shape('candle').tooltip('start*end*max*min*volumn');
	  var view2 = chart.createView({
	    start: {
	      x: 0,
	      y: 0.85
	    },
	    end: {
	      x: 1,
	      y: 1
	    }
	  });
	
	  view2.source(frame);
	  view2.col('volumn', {
	    alias: '成交量(万)',
	    tickInterval: 4000
	  });
	  view2.col('time', {
	    type: 'time',
	    nice: false,
	    mask: 'mm-dd',
	    alias: '时间',
	    tickCount: 10
	  });
	  view2.axis('time', false);
	  view2.axis('volumn', {
	    formatter: function formatter(val) {
	      return parseInt(val / 1000, 10) + 'k';
	    }
	  });
	  view2.interval().position('time*volumn').color('trend', ['#2AF483', '#F80041']);
	  chart.legend('trend', false);
	  var slider = new G2.Plugin.slider({
	    domId: 'range',
	    height: 30,
	    charts: [view1, view2],
	    xDim: 'time',
	    yDim: 'volumn'
	  });
	  slider.render();
	});

/***/ }
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlcy92aWV3QW5kRm9yY2VGaXQubWQiXSwibmFtZXMiOlsiJCIsInJlcXVpcmUiLCJHMiIsImdldEpTT04iLCJkYXRhIiwiU3RhdCIsImNoYXJ0IiwiQ2hhcnQiLCJpZCIsImZvcmNlRml0IiwiaGVpZ2h0IiwiRnJhbWUiLCJmcmFtZSIsImFkZENvbCIsIm9iaiIsInN0YXJ0IiwiZW5kIiwidmlldzEiLCJjcmVhdGVWaWV3IiwieCIsInkiLCJzb3VyY2UiLCJ0eXBlIiwiYWxpYXMiLCJ2YWx1ZXMiLCJuaWNlIiwibWFzayIsInRpY2tDb3VudCIsImF4aXMiLCJ0aXRsZSIsInNjaGVtYSIsInBvc2l0aW9uIiwiY29sb3IiLCJzaGFwZSIsInRvb2x0aXAiLCJ2aWV3MiIsImNvbCIsInRpY2tJbnRlcnZhbCIsImZvcm1hdHRlciIsInZhbCIsInBhcnNlSW50IiwiaW50ZXJ2YWwiLCJsZWdlbmQiLCJzbGlkZXIiLCJQbHVnaW4iLCJkb21JZCIsImNoYXJ0cyIsInhEaW0iLCJ5RGltIiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBRSxLQUFJQSxJQUFJLG1CQUFBQyxDQUFRLENBQVIsQ0FBUjtBQUNBLEtBQUlDLEtBQUssbUJBQUFELENBQVEsQ0FBUixDQUFUO0FBQ0Esb0JBQUFBLENBQVEsQ0FBUjtBQUNBRCxHQUFFRyxPQUFGLENBQVUscUJBQVYsRUFBaUMsVUFBU0MsSUFBVCxFQUFlO0FBQzlDLE9BQUlDLE9BQU9ILEdBQUdHLElBQWQ7QUFDQSxPQUFJQyxRQUFRLElBQUlKLEdBQUdLLEtBQVAsQ0FBYTtBQUN2QkMsU0FBSSxJQURtQjtBQUV2QkMsZUFBVSxJQUZhO0FBR3ZCQyxhQUFRO0FBSGUsSUFBYixDQUFaO0FBS0E7QUFDQSxPQUFJQyxRQUFRVCxHQUFHUyxLQUFmO0FBQ0EsT0FBSUMsUUFBUSxJQUFJRCxLQUFKLENBQVVQLElBQVYsQ0FBWjtBQUNBUSxTQUFNQyxNQUFOLENBQWEsT0FBYixFQUFzQixVQUFT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JCA9IHJlcXVpcmUoJ2pxdWVyeScpO1xuICB2YXIgRzIgPSByZXF1aXJlKCdnMicpO1xuICByZXF1aXJlKCdnMi1wbHVnaW4tc2xpZGVyJyk7XG4gICQuZ2V0SlNPTignLi9jYW5kbGVTdGlja3MuanNvbicsIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICB2YXIgU3RhdCA9IEcyLlN0YXQ7XG4gICAgdmFyIGNoYXJ0ID0gbmV3IEcyLkNoYXJ0KHtcbiAgICAgIGlkOiAnYzEnLFxuICAgICAgZm9yY2VGaXQ6IHRydWUsXG4gICAgICBoZWlnaHQ6IDI1MFxuICAgIH0pO1xuICAgIC8vIOWIm+W7uuaVsOaNrua6kFxuICAgIHZhciBGcmFtZSA9IEcyLkZyYW1lO1xuICAgIHZhciBmcmFtZSA9IG5ldyBGcmFtZShkYXRhKTtcbiAgICBmcmFtZS5hZGRDb2woJ3RyZW5kJywgZnVuY3Rpb24ob2JqKSB7XG4gICAgICByZXR1cm4gKG9iai5zdGFydCA8PSBvYmouZW5kKSA/IDAgOiAxO1xuICAgIH0pO1xuICAgIHZhciB2aWV3MSA9IGNoYXJ0LmNyZWF0ZVZpZXcoe1xuICAgICAgc3RhcnQ6IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMFxuICAgICAgfSxcbiAgICAgIGVuZDoge1xuICAgICAgICB4OiAxLFxuICAgICAgICB5OiAwLjdcbiAgICAgIH1cbiAgICB9KTtcbiAgICB2aWV3MS5zb3VyY2UoZnJhbWUsIHtcbiAgICAgICd0cmVuZCc6IHtcbiAgICAgICAgdHlwZTogJ2NhdCcsXG4gICAgICAgIGFsaWFzOiAn6LaL5Yq/JyxcbiAgICAgICAgdmFsdWVzOiBbJ+S4iua2qCcsICfkuIvot4wnXVxuICAgICAgfSxcbiAgICAgICd0aW1lJzoge1xuICAgICAgICB0eXBlOiAndGltZScsXG4gICAgICAgIG5pY2U6IGZhbHNlLFxuICAgICAgICBtYXNrOiAnbW0tZGQnLFxuICAgICAgICBhbGlhczogJ+aXtumXtCcsXG4gICAgICAgIHRpY2tDb3VudDogMTBcbiAgICAgIH0sXG4gICAgICAndm9sdW1uJzoge1xuICAgICAgICBhbGlhczogJ+aIkOS6pOmHjydcbiAgICAgIH0sXG4gICAgICAnc3RhcnQnOiB7XG4gICAgICAgIGFsaWFzOiAn5byA55uY5Lu3J1xuICAgICAgfSxcbiAgICAgICdlbmQnOiB7XG4gICAgICAgIGFsaWFzOiAn5pS255uY5Lu3J1xuICAgICAgfSxcbiAgICAgICdtYXgnOiB7XG4gICAgICAgIGFsaWFzOiAn5pyA6auY5Lu3J1xuICAgICAgfSxcbiAgICAgICdtaW4nOiB7XG4gICAgICAgIGFsaWFzOiAn5pyA5L2O5Lu3J1xuICAgICAgfSxcbiAgICAgICdzdGFydCtlbmQrbWF4K21pbic6IHtcbiAgICAgICAgYWxpYXM6ICfogqHnpajku7fmoLwnXG4gICAgICB9XG4gICAgfSk7XG4gICAgdmlldzEuYXhpcygndGltZScsIHtcbiAgICAgIHRpdGxlOiBudWxsXG4gICAgfSk7XG4gICAgdmlldzEuc2NoZW1hKClcbiAgICAgIC5wb3NpdGlvbigndGltZSooc3RhcnQrZW5kK21heCttaW4pJylcbiAgICAgIC5jb2xvcigndHJlbmQnLCBbJyMyQUY0ODMnLCAnI0Y4MDA0MSddKVxuICAgICAgLnNoYXBlKCdjYW5kbGUnKVxuICAgICAgLnRvb2x0aXAoJ3N0YXJ0KmVuZCptYXgqbWluKnZvbHVtbicpO1xuICAgIHZhciB2aWV3MiA9IGNoYXJ0LmNyZWF0ZVZpZXcoe1xuICAgICAgc3RhcnQ6IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMC44NVxuICAgICAgfSxcbiAgICAgIGVuZDoge1xuICAgICAgICB4OiAxLFxuICAgICAgICB5OiAxXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB2aWV3Mi5zb3VyY2UoZnJhbWUpO1xuICAgIHZpZXcyLmNvbCgndm9sdW1uJywge1xuICAgICAgYWxpYXM6ICfmiJDkuqTph48o5LiHKScsXG4gICAgICB0aWNrSW50ZXJ2YWw6IDQwMDBcbiAgICB9KTtcbiAgICB2aWV3Mi5jb2woJ3RpbWUnLCB7XG4gICAgICB0eXBlOiAndGltZScsXG4gICAgICBuaWNlOiBmYWxzZSxcbiAgICAgIG1hc2s6ICdtbS1kZCcsXG4gICAgICBhbGlhczogJ+aXtumXtCcsXG4gICAgICB0aWNrQ291bnQ6IDEwXG4gICAgfSk7XG4gICAgdmlldzIuYXhpcygndGltZScsIGZhbHNlKTtcbiAgICB2aWV3Mi5heGlzKCd2b2x1bW4nLCB7XG4gICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uKHZhbCkge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsIC8gMTAwMCwgMTApICsgJ2snO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHZpZXcyLmludGVydmFsKClcbiAgICAgIC5wb3NpdGlvbigndGltZSp2b2x1bW4nKVxuICAgICAgLmNvbG9yKCd0cmVuZCcsIFsnIzJBRjQ4MycsICcjRjgwMDQxJ10pXG4gICAgY2hhcnQubGVnZW5kKCd0cmVuZCcsIGZhbHNlKTtcbiAgICB2YXIgc2xpZGVyID0gbmV3IEcyLlBsdWdpbi5zbGlkZXIoe1xuICAgICAgZG9tSWQ6ICdyYW5nZScsXG4gICAgICBoZWlnaHQ6IDMwLFxuICAgICAgY2hhcnRzOiBbdmlldzEsIHZpZXcyXSxcbiAgICAgIHhEaW06ICd0aW1lJyxcbiAgICAgIHlEaW06ICd2b2x1bW4nXG4gICAgfSk7XG4gICAgc2xpZGVyLnJlbmRlcigpO1xuICB9KTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL2V4YW1wbGVzL3ZpZXdBbmRGb3JjZUZpdC5tZFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=